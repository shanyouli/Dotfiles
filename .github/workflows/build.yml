name: 'system build'
on:
  push:
    branches:
      - master
    paths:
      - 'hosts/hostname.nix'
      - 'hosts/linux-test/**'
      - 'flake.lock'

  pull_request_target:
    branches:
      - master
    paths:
      - 'modules/shared/**'
      - 'hosts/hostname.nix'
      - 'hosts/linux-test/**'
      - 'flake.lock'
  # schedule:
  #   # run this daily at 8am UTC, or roughly 4am eastern
  #   - cron: '45 2 * * 6'
  workflow_dispatch:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Shallow clones won't work
          fetch-depth: 0
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Free Disk Space (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          df -h
          brew list
          [[ -d /Applications/Xcode_16.1_beta.app ]] && sudo rm -rf /Applications/Xcode_16.1_beta.app
          [[ -d /Applications/Xcode_16_beta_6.app ]] && sudo rm -rf /Applications/Xcode_16_beta_6.app
          [[ -d /Applications/Xcode_15.1.app ]] && sudo rm -rf /Applications/Xcode_15.1.app
          [[ -d /Applications/Xcode_15.2.app ]] && sudo rm -rf  /Applications/Xcode_15.2.app
          [[ -d /Applications/Xcode_15.3.app ]] && sudo rm -rf  /Applications/Xcode_15.3.app
          [[ -d /Applications/Xcode_14.3.1.app ]] && sudo rm -rf /Applications/Xcode_14.3.1.app
          [[ -d /Applications/Xcode_15.0.1.app ]] && sudo rm -rf /Applications/Xcode_15.0.1.app
          brew uninstall --zap google-chrome
          df -h
      - uses: cachix/install-nix-action@V28
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            # access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: shanyouli
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Print CPU info
        run: |
          if command -v nproc >/dev/null ; then
            echo "Cores: $(nproc), Arch: $(uname -p)"
          else
            echo "Cores: $(nix shell nixpkgs#coreutils-full -c nproc) , Arch: $(uname -p)"
          fi
      - name: Run Flake Checks
        run: |
          nix flake check --show-trace --impure
          # nix run --impure .#checks
          # if [[ $(uname) == "Darwin" ]]; then
          #   nix run -v --experimental-features "nix-command flakes" --extra-substituters https://shanyouli.cachix.org --impure github:nix-community/home-manager --no-write-lock-file -- build --flake .#test@aarch64-darwin -b backup --show-trace
          # else
          #   nix run -v --experimental-features "nix-command flakes" --extra-substituters https://shanyouli.cachix.org --impure github:nix-community/home-manager --no-write-lock-file -- build --flake .#test@x86_64-linux -b backup --show-trace
          # fi
        timeout-minutes: 240
