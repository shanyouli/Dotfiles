{
  config,
  options,
  pkgs,
  lib,
  ...
}:
with lib;
with lib.my; let
  cfg = config.my.modules.tmux;
  cft = config.my.modules.theme;
in {
  options.my.modules.tmux = with types; {
    enable = mkBoolOpt false;
    rcFiles = mkOpt (listOf (either str path)) [];
  };

  config = mkIf cfg.enable {
    my.user.packages = with pkgs; [tmux];

    my.modules.zsh = {
      rcFiles = ["${configDir}/tmux/tmux.zsh"];
    };

    my.hm.configFile = {
      "tmux" = {
        source = "${configDir}/tmux";
        recursive = true;
      };
      "tmux/extraInit" = {
        text = let
          theme =
            if cft.enable
            then ''
              set -g @catppuccin_flavour '${cft.name}'
              run-shell '${pkgs.tmuxPlugins.catppuccin}/share/tmux-plugins/catppuccin/catppuccin.tmux'
            ''
            else ''
              set -g @tmux_power_theme 'gold'
              run-shell '${pkgs.tmuxPlugins.power-theme}/share/tmux-plugins/power/tmux-power.tmux'
            '';
        in ''
          #!/usr/bin/env bash
          # This file is auto-generated by nixos, don't edit by hand!
          ${concatMapStrings (path: ''
              source-file '${path}'
            '')
            cfg.rcFiles}
          set -g @tmux_power_prefix_highlight_pos 'L'
          set -g @continuum-restore 'on'
          ${theme}
          run-shell '${pkgs.tmuxPlugins.copycat}/share/tmux-plugins/copycat/copycat.tmux'
          run-shell '${pkgs.tmuxPlugins.prefix-highlight}/share/tmux-plugins/prefix-highlight/prefix_highlight.tmux'
          run-shell '${pkgs.tmuxPlugins.yank}/share/tmux-plugins/yank/yank.tmux'
          run-shell '${pkgs.tmuxPlugins.open}/share/tmux-plugins/open/open.tmux'
          run-shell '${pkgs.tmuxPlugins.resurrect}/share/tmux-plugins/resurrect/resurrect.tmux'
          run-shell '${pkgs.tmuxPlugins.continuum}/share/tmux-plugins/continuum/continuum.tmux'
        '';
        executable = true;
      };
    };
    env = mkMerge [
      {TMUX_HOME = "$XDG_CONFIG_HOME/tmux";}
    ];
  };
}
