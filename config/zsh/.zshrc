# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

_source ~zdot/config.zsh

_source ~zdot/prev.zshrc

function zt { zinit depth"1" lucid  ${1/#[0-9][a-c]/wait"$1"} "${@:2}" ; }
function zice {
  local _all=( $@ )
  local _wait
  local _package
  if [[ ${_all[1]} == [0-9][a-c] ]]; then
  _wait=wait"${_all[1]}"
  shift _all
  fi
  _package=${_all[-1]}
  zinit ice lucid depth'1' $_wait ${_all:0:-1}
  zinit load $_package
}
: ${ZINIT_HOME:="~data/zinit/zinit.git"}

typeset -gA ZINIT=(
  HOME_DIR        ~data/zinit
  ZCOMPDUMP_PATH  $ZSH_CACHE/zcompdump
  BIN_DIR         $ZINIT_HOME
  COMPINIT_OPTS   -C
)
[[ -d $ZINIT_HOME ]] || {
  mkdir -p ${ZINIT[HOME_DIR]}
  git clone --depth 1 https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
}
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zt 0a light-mode for \
  blockf \
  zsh-users/zsh-completions \
  compile'{src/*.zsh,src/strategies/*}' pick'zsh-autosuggestions.zsh' \
  atload'_zsh_autosuggest_start' \
  zsh-users/zsh-autosuggestions

if [[ "$INSIDE_EMACS" != 'vterm' ]]; then
  zt 0b light-mode for \
    compile'{hsmw-*,test/*}' \
    zdharma/history-search-multi-word \
    atload'bindkey -M viins "^n" history-substring-search-down;
    bindkey -M viins "^p" history-substring-search-up;
    bindkey "^[[A" history-substring-search-up;
    bindkey "^[[B" history-substring-search-down' \
    zsh-users/zsh-history-substring-search

  # history-search-multi-word config
  # # Color in which to highlight matched, searched text
  # (default bg=17 on 256-color terminals)
  zstyle ":history-search-multi-word" highlight-color "fg=yellow,bold"
  # Whether to perform syntax highlighting (default true)
  zstyle ":plugin:history-search-multi-word" synhl "yes"
  # Effect on active history entry. Try: standout, bold, bg=blue (default underline)
  zstyle ":plugin:history-search-multi-word" active "underline"
  # Whether to check paths for existence and mark with magenta (default true)
  zstyle ":plugin:history-search-multi-word" check-paths "yes"
  # Whether pressing Ctrl-C or ESC should clear entered query
  zstyle ":plugin:history-search-multi-word" clear-on-cancel "no"
fi

zt 0b light-mode for \
    pick'autopair.zsh' nocompletions atload'bindkey "^H" backward-kill-word;
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(autopair-insert)' \
      hlissner/zsh-autopair \

# fast-syntax-highlighting
zice 0b if'[[ -z $SSH_CONNECTION ]]'  atinit='zpcompinit' \
  zdharma/fast-syntax-highlighting

# alias 提示
zice 0c atload'YSU_MESSAGE_POSITION="after"' MichaelAquilina/zsh-you-should-use

# 刷新补全，修复bash-completion失效的问题, 或者删除zcompdump文件
# @https://stackoverflow.com/questions/3249432/can-a-bash-tab-completion-script-be-used-in-zsh
recomp() {
  zinit compinit >/dev/null
}
if [[ $TERM != dumb ]]; then
  # 补全文件设置
  source $ZDOTDIR/keybinds.zsh
  autoload -Uz compinit && compinit -u -d $ZSH_CACHE/zcompdump
  (( $+commands[fzf] )) || source $ZDOTDIR/completion.zsh

  source $ZDOTDIR/aliases.zsh
  source $ZDOTDIR/color.zsh

  if (( $+commands[docker] )) ; then
     zinit ice as"completion"
     zinit snippet https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker
  fi
  ## Auto-generated by my nix config
  _source $ZDOTDIR/extra.zshrc
  # If you have host-local configuration, this is where you'd put it
  _source ~/.zshrc

  # vterm
  if [[ "$INSIDE_EMACS" != 'vterm' ]] && type p10k >/dev/null ; then
     _source $ZDOTDIR/p10k.zsh
  fi
fi
