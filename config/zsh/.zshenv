# hash进行文件缩写，hash -d a=~/.a ==> ~a
hash -d config=${XDG_CONFIG_HOME:=~/.config}
hash -d cache=${XDG_CACHE_HOME:=~/.cache}
hash -d data=${XDG_DATA_HOME:=~/.local/share}
hash -d zdot=$ZDOTDIR
hash -d dot=$DOTFILES

hash -d Downloads=~/Downloads
hash -d Workspace=~/Workspace

## Auto-generated by my nix config
function _source {
    for file in "$@"; do
        if [[ -r $file ]]; then
            source $file
        fi
    done
}
# command -v "$1" >/dev/null || return 1
function _cache {
    if (( $+commands[$1] )) || [[ -x $1 ]]; then
        local cache_dir="$XDG_CACHE_HOME/${SHELL##*/}/cache"
        local cache="$cache_dir/${1##*/}"
        if [[ ! -f $cache || ! -s $cache ]]; then
            echo "Caching $1"
            mkdir -p $cache_dir
            "$@" >$cache
            chmod 600 $cache
        fi

        if [[ -o interactive ]]; then
            source $cache || rm -f $cache
        fi
    else
        return 1
    fi
}
# 用 typeset -U path 给它设置 unique 属性，使得 $PATH 自动去重
typeset -U path
path=( $path )

[[ -d ~zdot/completion ]] && {
    fpath+=~zdot/completion
}

# Be more restrictive with permissions; no one has any business reading things
# that don't belong to them.
#
if (( EUID != 0 )); then
    umask 027
else
    umask 077
fi

export XDG_DATA_HOME
export XDG_CONFIG_HOME
export XDG_CACHE_HOME

_source ${ZDOTDIR:-${XDG_CONFIG_HOME}}/extra.zshenv
# [ -f "${0:a:h}/extra.zshenv" ] && source "${0:a:h}/extra.zshenv"

# If you have host-local configuration, this is where you'd put it
_source ~/.zshenv.local
